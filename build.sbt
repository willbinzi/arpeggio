ThisBuild / version := "0.1.0"
ThisBuild / scalaVersion := "3.3.4"
ThisBuild / scalafmtOnCompile := true

import bindgen.interface.Binding

import scala.scalanative.build._

lazy val core = crossProject(JVMPlatform, NativePlatform)
  .crossType(CrossType.Pure)
  .in(file("core"))
  .settings(
    name := "arpeggio-core",
    libraryDependencies += "org.typelevel" %%% "cats-effect" % "3.5.1",
    libraryDependencies += "co.fs2" %%% "fs2-core" % "3.9.2"
  )

lazy val pedals = crossProject(JVMPlatform, NativePlatform)
  .crossType(CrossType.Pure)
  .in(file("pedals"))
  .dependsOn(core % "compile->compile;test->test")
  .settings(name := "arpeggio-pedals")

lazy val portaudio = crossProject(NativePlatform)
  .crossType(CrossType.Pure)
  .in(file("portaudio"))
  .dependsOn(core % "compile->compile;test->test")
  .enablePlugins(BindgenPlugin, VcpkgNativePlugin)
  .settings(
    name := "arpeggio-portaudio",
    vcpkgDependencies := VcpkgDependencies(
      "portaudio"
    ),
    vcpkgNativeConfig ~= {
      _.withRenamedLibraries(Map("portaudio" -> "portaudio-2.0"))
    },
    bindgenBindings := {
      val configurator = vcpkgConfigurator.value
      Seq(
        Binding(
          vcpkgConfigurator.value.includes("portaudio") / "portaudio.h",
          "cbindings.portaudio"
        )
          .withLinkName("portaudio")
      )
    },
    // Silence warnings coming from files generated by bindgen
    Compile / scalacOptions += "-Wconf:src=target/scala[^/]*/src_managed/.*:silent" 
  )

val exampleLinkSettings = Seq(
  nativeConfig ~= {
    _.withLTO(LTO.full)
      .withMode(Mode.release)
      .withGC(GC.commix)
  }
)

lazy val exampleDry = crossProject(NativePlatform)
  .withoutSuffixFor(NativePlatform)
  .crossType(CrossType.Pure)
  .in(file("examples/dry"))
  .dependsOn(core % "compile->compile;test->test")
  .dependsOn(portaudio % "compile->compile;test->test")
  .settings(exampleLinkSettings)
  .settings(name := "arpeggio-example-dry")

lazy val exampleReverb = crossProject(NativePlatform)
  .withoutSuffixFor(NativePlatform)
  .crossType(CrossType.Pure)
  .in(file("examples/reverb"))
  .dependsOn(core % "compile->compile;test->test")
  .dependsOn(portaudio % "compile->compile;test->test")
  .dependsOn(pedals % "compile->compile;test->test")
  .settings(exampleLinkSettings)
  .settings(name := "arpeggio-example-reverb")
